name: ci

on:
  #push:
    #paths:
      #- ".github/workflows/ci.yml"
      #- src/**
      #- scripts/mktag.sh
  schedule:
    - cron: '0 * * * *'

jobs:
  server-docker:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      packages: write
    outputs:
      image: ${{steps.img.outputs.name}}@${{steps.build.outputs.digest}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get latest commit timestamp
        id: get_commit
        run: |
          COMMIT_TIME=$(curl -s https://api.github.com/repos/NekoUwUGamerfnf/Zanieon-Frontier-Defense/commits/main | jq -r '.commit.committer.date')
          echo "Latest commit time: $COMMIT_TIME"
          echo "commit_time=$COMMIT_TIME" >> $GITHUB_OUTPUT

      - name: Check if commit is within the last hour
        run: |
          COMMIT_TIME="${{ steps.get_commit.outputs.commit_time }}"
          COMMIT_UNIX=$(date -d "$COMMIT_TIME" +%s)
          NOW_UNIX=$(date -u +%s)
          DIFF=$((NOW_UNIX - COMMIT_UNIX))
          echo "Seconds since last commit: $DIFF"
          if [ "$DIFF" -le 3600 ]; then
            echo "Recent commit found within the last hour."
            exit 0
          else
            echo "No recent commit in the last hour."
            exit 1
          fi

      - id: img
        name: Generate image name
        run: name="$(echo "ghcr.io/${{github.repository_owner}}/frontier-defense-dedicated" | tr "[:upper:]" "[:lower:]")"; echo "${name}"; echo "name=${name}" >> $GITHUB_OUTPUT

      - id: tags
        name: Generate tags
        run: ./scripts/mktag.sh ${{steps.img.outputs.name}} stable-git stable

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - id: build
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: src
          push: true
          tags: ${{steps.tags.outputs.tags}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.created=${{steps.tags.outputs.rfc3339}}
            org.opencontainers.image.authors=discord:pg9182#8484
            org.opencontainers.image.url=https://github.com/${{github.repository}}
            org.opencontainers.image.documentation=https://github.com/${{github.repository}}
            org.opencontainers.image.source=https://github.com/${{github.repository}}
            org.opencontainers.image.revision=${{github.sha}}
            org.opencontainers.image.vendor=${{github.repository_owner}}
            org.opencontainers.image.licenses=Zlib AND MIT
            org.opencontainers.image.description=northstar-dedicated v${{steps.tags.outputs.ever}} @ ${{steps.tags.outputs.git}} (Titanfall v${{steps.tags.outputs.tfver}} / Northstar v${{steps.tags.outputs.nsver}})
            io.github.pg9182.northstar-dedicated.northstar.version=${{steps.tags.outputs.nsver}}
            io.github.pg9182.northstar-dedicated.titanfall.version=${{steps.tags.outputs.tfver}}
            io.github.pg9182.northstar-dedicated.entrypoint.compat=${{steps.tags.outputs.ever}}
            io.github.pg9182.northstar-dedicated.entrypoint.version=${{github.sha}}
